name: Publish to PyPI.org

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist ${{github.workspace}}/python/
      - name: Move sdist to dist
        run: mkdir -p dist && mv ${{github.workspace}}/python/dist/*.tar.gz dist/

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  cibuildwheel:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-15]

    steps:
      - uses: actions/checkout@v3

      - name: Build test wheels (only PRs)
        if: github.event_name != 'release'
        uses: pypa/cibuildwheel@v2.22.0
        env: # build 1 build per platform just to make sure we can do it later when releasing
          CIBW_BUILD: "cp310-*"
        with:
          package-dir: ${{github.workspace}}/python/

      # To handle OpenMP issue in MacOS
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install llvm
          echo 'export CC=/opt/homebrew/opt/llvm/bin/clang' >> $GITHUB_ENV
          echo 'export CXX=/opt/homebrew/opt/llvm/bin/clang++' >> $GITHUB_ENV      

      - name: Build all wheels
        if: github.event_name == 'release'
        uses: pypa/cibuildwheel@v2.22.0
        with:
          package-dir: ${{github.workspace}}/python/

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  pypi:
    if: github.event_name == 'release'
    needs: [cibuildwheel, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
